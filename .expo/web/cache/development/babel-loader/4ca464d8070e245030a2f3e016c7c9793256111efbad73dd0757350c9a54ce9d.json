{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FAQScreen = function FAQScreen() {\n  var faqData = [{\n    question: \"How can I schedule a pickup?\",\n    answer: 'You can schedule a pickup by navigating to the \"Schedule Pickup\" section in the app and choosing your preferred date and time.'\n  }, {\n    question: \"How long does the laundry process take?\",\n    answer: \"The duration of the laundry process depends on the type of service you choose. We provide estimated processing times for each service in the app. You can also track the progress in the 'Order History' section.\"\n  }, {\n    question: \"How do I track the status of my order?\",\n    answer: 'You can track the status of your order in the \"Order History\" section of the app. We provide real-time updates on the processing of your laundry.'\n  }, {\n    question: \"What payment methods do you accept?\",\n    answer: \"We accept various payment methods, including credit cards and digital wallets. You can securely pay for your services through the app.\"\n  }, {\n    question: \"How do I track the status of my order?\",\n    answer: 'You can track the status of your order in the \"Order History\" section of the app. We provide real-time updates on the processing of your laundry.'\n  }];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedIndex = _useState2[0],\n    setExpandedIndex = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var toggleAnswer = function toggleAnswer(index) {\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/back.jpg\"),\n    style: styles.backgroundImage,\n    children: [_jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"FAQ / Help Center\"\n      }), faqData.map(function (item, index) {\n        return _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return toggleAnswer(index);\n          },\n          children: _jsxs(View, {\n            style: [styles.faqItem, expandedIndex === index && styles.faqItemExpanded],\n            children: [_jsxs(View, {\n              style: styles.questionContainer,\n              children: [_jsx(Text, {\n                style: styles.question,\n                children: item.question\n              }), _jsx(Icon, {\n                name: expandedIndex === index ? \"chevron-up\" : \"chevron-down\",\n                size: 14,\n                color: \"#770737\"\n              })]\n            }), expandedIndex === index && _jsx(Text, {\n              style: styles.answer,\n              children: item.answer\n            })]\n          })\n        }, index);\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsxs(View, {\n        style: styles.overlay,\n        children: [_jsx(Text, {\n          style: styles.overlayText,\n          children: \"Additional Content\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: function onPress() {\n            return setModalVisible(!modalVisible);\n          },\n          children: _jsx(Text, {\n            style: styles.closeButtonText,\n            children: \"Close\"\n          })\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    padding: 16,\n    backgroundColor: \"rgba(255,255,255, 0.7)\"\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 16,\n    marginTop: 2,\n    color: \"black\"\n  },\n  faqItem: {\n    marginBottom: 20,\n    backgroundColor: \"#fff\",\n    borderRadius: 8,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: \"#ddd\"\n  },\n  faqItemExpanded: {\n    backgroundColor: \"#E6E6FA\"\n  },\n  questionContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n    color: \"#770737\"\n  },\n  answer: {\n    fontSize: 16,\n    color: \"#333\"\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  overlay: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n    borderRadius: 10\n  },\n  overlayText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    marginBottom: 16\n  },\n  closeButton: {\n    backgroundColor: \"#953553\",\n    padding: 12,\n    borderRadius: 8\n  },\n  closeButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  }\n});\nexport default FAQScreen;","map":{"version":3,"names":["React","useState","View","Text","ScrollView","StyleSheet","TouchableWithoutFeedback","ImageBackground","TouchableOpacity","Modal","Icon","jsx","_jsx","jsxs","_jsxs","FAQScreen","faqData","question","answer","_useState","_useState2","_slicedToArray","expandedIndex","setExpandedIndex","_useState3","_useState4","modalVisible","setModalVisible","toggleAnswer","index","source","require","style","styles","backgroundImage","children","contentContainerStyle","container","title","map","item","onPress","faqItem","faqItemExpanded","questionContainer","name","size","color","animationType","transparent","visible","onRequestClose","overlay","overlayText","closeButton","closeButtonText","create","flexGrow","justifyContent","padding","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","borderRadius","borderWidth","borderColor","flexDirection","alignItems","flex","resizeMode"],"sources":["C:/Users/Waleed Qazi/Desktop/carRent/src/screens/FaqScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  Modal,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nconst FAQScreen = () => {\r\n  const faqData = [\r\n    {\r\n      question: \"How can I schedule a pickup?\",\r\n      answer:\r\n        'You can schedule a pickup by navigating to the \"Schedule Pickup\" section in the app and choosing your preferred date and time.',\r\n    },\r\n    {\r\n      question: \"How long does the laundry process take?\",\r\n      answer:\r\n        \"The duration of the laundry process depends on the type of service you choose. We provide estimated processing times for each service in the app. You can also track the progress in the 'Order History' section.\",\r\n    },\r\n    {\r\n      question: \"How do I track the status of my order?\",\r\n      answer:\r\n        'You can track the status of your order in the \"Order History\" section of the app. We provide real-time updates on the processing of your laundry.',\r\n    },\r\n    {\r\n      question: \"What payment methods do you accept?\",\r\n      answer:\r\n        \"We accept various payment methods, including credit cards and digital wallets. You can securely pay for your services through the app.\",\r\n    },\r\n    {\r\n      question: \"How do I track the status of my order?\",\r\n      answer:\r\n        'You can track the status of your order in the \"Order History\" section of the app. We provide real-time updates on the processing of your laundry.',\r\n    },\r\n  ];\r\n\r\n  const [expandedIndex, setExpandedIndex] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const toggleAnswer = (index) => {\r\n    setExpandedIndex(expandedIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../assets/back.jpg\")}\r\n      style={styles.backgroundImage}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        <Text style={styles.title}>FAQ / Help Center</Text>\r\n\r\n        {faqData.map((item, index) => (\r\n          <TouchableWithoutFeedback\r\n            key={index}\r\n            onPress={() => toggleAnswer(index)}\r\n          >\r\n            <View\r\n              style={[\r\n                styles.faqItem,\r\n                expandedIndex === index && styles.faqItemExpanded,\r\n              ]}\r\n            >\r\n              <View style={styles.questionContainer}>\r\n                <Text style={styles.question}>{item.question}</Text>\r\n                <Icon\r\n                  name={expandedIndex === index ? \"chevron-up\" : \"chevron-down\"}\r\n                  size={14}\r\n                  color=\"#770737\"\r\n                />\r\n              </View>\r\n              {expandedIndex === index && (\r\n                <Text style={styles.answer}>{item.answer}</Text>\r\n              )}\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        ))}\r\n      </ScrollView>\r\n\r\n      {/* Additional overlay content */}\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.overlay}>\r\n          <Text style={styles.overlayText}>Additional Content</Text>\r\n          <TouchableOpacity\r\n            style={styles.closeButton}\r\n            onPress={() => setModalVisible(!modalVisible)}\r\n          >\r\n            <Text style={styles.closeButtonText}>Close</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    padding: 16,\r\n    backgroundColor: \"rgba(255,255,255, 0.7)\", \r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    marginTop: 2, \r\n    color: \"black\",\r\n  },\r\n  faqItem: {\r\n    marginBottom: 20,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n  },\r\n  faqItemExpanded: {\r\n    backgroundColor: \"#E6E6FA\", // Light background when expanded\r\n  },\r\n  questionContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  question: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n    color: \"#770737\",\r\n  },\r\n  answer: {\r\n    fontSize: 16,\r\n    color: \"#333\",\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.9)\", \r\n    borderRadius: 10,\r\n  },\r\n  overlayText: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n    marginBottom: 16,\r\n  },\r\n  closeButton: {\r\n    backgroundColor: \"#953553\",\r\n    padding: 12,\r\n    borderRadius: 8,\r\n  },\r\n  closeButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default FAQScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}