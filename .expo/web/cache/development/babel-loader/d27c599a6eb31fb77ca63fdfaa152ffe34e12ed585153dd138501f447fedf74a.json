{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FAQScreen = function FAQScreen() {\n  var faqData = [{\n    question: \"How can I rent a car?\",\n    answer: 'You can rent a car by navigating to the \"Rent a Car\" section in the app and choosing your preferred car. Click on a car to view details and rent.'\n  }, {\n    question: \"What documents do I need for car rental?\",\n    answer: \"To rent a car, you typically need a valid driver's license, proof of insurance, and a credit card for payment. Additional requirements may vary by location.\"\n  }, {\n    question: \"Can I extend the rental period?\",\n    answer: \"Yes, you can extend the rental period if the car is available. Please contact customer support for assistance.\"\n  }, {\n    question: \"What types of cars are available for rent?\",\n    answer: 'We offer a variety of cars, including sedans, SUVs, and more. You can browse the available cars in the \"Rent a Car\" section.'\n  }, {\n    question: \"What payment methods do you accept?\",\n    answer: \"We accept various payment methods, including credit cards and digital wallets. You can securely pay for your car rental through the app.\"\n  }];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedIndex = _useState2[0],\n    setExpandedIndex = _useState2[1];\n  var toggleAnswer = function toggleAnswer(index) {\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n  return _jsx(ImageBackground, {\n    source: {\n      uri: \"https://images.pexels.com/photos/164634/pexels-photo-164634.jpeg?auto=compress&cs=tinysrgb&w=600\"\n    },\n    style: styles.backgroundImage,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"FAQ / Help Center\"\n      }), faqData.map(function (item, index) {\n        return _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return toggleAnswer(index);\n          },\n          children: _jsxs(View, {\n            style: [styles.faqItem, expandedIndex === index && styles.faqItemExpanded],\n            children: [_jsxs(View, {\n              style: styles.questionContainer,\n              children: [_jsx(Text, {\n                style: styles.question,\n                children: item.question\n              }), _jsx(Icon, {\n                name: expandedIndex === index ? \"chevron-up\" : \"chevron-down\",\n                size: 14,\n                color: \"white\"\n              })]\n            }), expandedIndex === index && _jsx(Text, {\n              style: styles.answer,\n              children: item.answer\n            })]\n          })\n        }, index);\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    padding: 16,\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 16,\n    marginTop: 2,\n    color: \"white\"\n  },\n  faqItem: {\n    marginBottom: 20,\n    backgroundColor: \"#000\",\n    borderRadius: 8,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: \"#333\"\n  },\n  faqItemExpanded: {\n    backgroundColor: \"#222\"\n  },\n  questionContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n    color: \"white\"\n  },\n  answer: {\n    fontSize: 16,\n    color: \"white\"\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default FAQScreen;","map":{"version":3,"names":["React","useState","View","Text","ScrollView","StyleSheet","TouchableWithoutFeedback","ImageBackground","Icon","jsx","_jsx","jsxs","_jsxs","FAQScreen","faqData","question","answer","_useState","_useState2","_slicedToArray","expandedIndex","setExpandedIndex","toggleAnswer","index","source","uri","style","styles","backgroundImage","children","contentContainerStyle","container","title","map","item","onPress","faqItem","faqItemExpanded","questionContainer","name","size","color","create","flexGrow","justifyContent","padding","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","borderRadius","borderWidth","borderColor","flexDirection","alignItems","flex","resizeMode"],"sources":["C:/Users/Waleed Qazi/Desktop/carRent/src/screens/FaqScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nconst FAQScreen = () => {\r\n  const faqData = [\r\n    {\r\n      question: \"How can I rent a car?\",\r\n      answer:\r\n        'You can rent a car by navigating to the \"Rent a Car\" section in the app and choosing your preferred car. Click on a car to view details and rent.',\r\n    },\r\n    {\r\n      question: \"What documents do I need for car rental?\",\r\n      answer:\r\n        \"To rent a car, you typically need a valid driver's license, proof of insurance, and a credit card for payment. Additional requirements may vary by location.\",\r\n    },\r\n    {\r\n      question: \"Can I extend the rental period?\",\r\n      answer:\r\n        \"Yes, you can extend the rental period if the car is available. Please contact customer support for assistance.\",\r\n    },\r\n    {\r\n      question: \"What types of cars are available for rent?\",\r\n      answer:\r\n        'We offer a variety of cars, including sedans, SUVs, and more. You can browse the available cars in the \"Rent a Car\" section.',\r\n    },\r\n    {\r\n      question: \"What payment methods do you accept?\",\r\n      answer:\r\n        \"We accept various payment methods, including credit cards and digital wallets. You can securely pay for your car rental through the app.\",\r\n    },\r\n  ];\r\n\r\n  const [expandedIndex, setExpandedIndex] = useState(null);\r\n\r\n  const toggleAnswer = (index) => {\r\n    setExpandedIndex(expandedIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={{\r\n        uri:\r\n          \"https://images.pexels.com/photos/164634/pexels-photo-164634.jpeg?auto=compress&cs=tinysrgb&w=600\",\r\n      }}\r\n      style={styles.backgroundImage}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        <Text style={styles.title}>FAQ / Help Center</Text>\r\n\r\n        {faqData.map((item, index) => (\r\n          <TouchableWithoutFeedback\r\n            key={index}\r\n            onPress={() => toggleAnswer(index)}\r\n          >\r\n            <View\r\n              style={[\r\n                styles.faqItem,\r\n                expandedIndex === index && styles.faqItemExpanded,\r\n              ]}\r\n            >\r\n              <View style={styles.questionContainer}>\r\n                <Text style={styles.question}>{item.question}</Text>\r\n                <Icon\r\n                  name={expandedIndex === index ? \"chevron-up\" : \"chevron-down\"}\r\n                  size={14}\r\n                  color=\"white\"\r\n                />\r\n              </View>\r\n              {expandedIndex === index && (\r\n                <Text style={styles.answer}>{item.answer}</Text>\r\n              )}\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        ))}\r\n      </ScrollView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    padding: 16,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    marginTop: 2,\r\n    color: \"white\",\r\n  },\r\n  faqItem: {\r\n    marginBottom: 20,\r\n    backgroundColor: \"#000\",\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    borderWidth: 1,\r\n    borderColor: \"#333\",\r\n  },\r\n  faqItemExpanded: {\r\n    backgroundColor: \"#222\", // Dark background when expanded\r\n  },\r\n  questionContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  question: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n    color: \"white\",\r\n  },\r\n  answer: {\r\n    fontSize: 16,\r\n    color: \"white\",\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default FAQScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}