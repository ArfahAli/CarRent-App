{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckoutScreen from \"./src/Checkout\";\nimport HomeScreen from \"./src/HomeScreen\";\nimport MapScreen from \"./src/MapScreen\";\nimport SettingsScreen from \"./src/SettingsScreen\";\nimport SavedScreen from \"./src/SavedScreen\";\nimport InfoScreen from \"./src/InfoScreen\";\nimport Seeddata from \"./src/seeddata\";\nimport Signup from \"./src/signup\";\nimport Login from \"./src/login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeIconActive = require(\"./src/assets/icons/home-active.png\");\nvar homeIcon = require(\"./src/assets/icons/home.png\");\nvar compassIconActive = require(\"./src/assets/icons/compass-active.png\");\nvar compassIcon = require(\"./src/assets/icons/compass.png\");\nvar savedIconActive = require(\"./src/assets/icons/saved-active.png\");\nvar savedIcon = require(\"./src/assets/icons/saved.png\");\nvar settingsIconActive = require(\"./src/assets/icons/settings-active.png\");\nvar settingsIcon = require(\"./src/assets/icons/settings.png\");\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Initial\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Info\",\n      children: function children(props) {\n        return _jsx(InfoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          navigation: props.navigation\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Checkout\",\n      component: CheckoutScreen\n    })]\n  });\n}\nexport default function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setLoggedIn = _useState2[1];\n  var handleLogin = function handleLogin() {\n    setLoggedIn(true);\n  };\n  useEffect(function () {\n    Seeddata();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: !isLoggedIn ? _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = focused ? homeIconActive : homeIcon;\n            } else if (route.name === \"Map\") {\n              iconName = focused ? compassIconActive : compassIcon;\n            } else if (route.name === \"Saved\") {\n              iconName = focused ? savedIconActive : savedIcon;\n            } else if (route.name === \"Settings\") {\n              iconName = focused ? settingsIconActive : settingsIcon;\n            }\n            return _jsx(Image, {\n              source: iconName,\n              resizeMode: \"contain\",\n              style: styles.footerIcon\n            });\n          },\n          tabBarShowLabel: false,\n          tabBarStyle: {\n            position: \"absolute\",\n            padding: 10,\n            backgroundColor: \"black\",\n            borderTopStartRadius: 40,\n            borderTopEndRadius: 40\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStack\n      }), _jsx(Tab.Screen, {\n        name: \"Map\",\n        component: MapScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Saved\",\n        component: SavedScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      })]\n    }) : _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        children: function children() {\n          return _jsx(Login, {\n            onLogin: handleLogin\n          });\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: Signup\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: Signup\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  footerIcon: {\n    width: 25\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Image","StyleSheet","CheckoutScreen","HomeScreen","MapScreen","SettingsScreen","SavedScreen","InfoScreen","Seeddata","Signup","Login","jsx","_jsx","jsxs","_jsxs","homeIconActive","require","homeIcon","compassIconActive","compassIcon","savedIconActive","savedIcon","settingsIconActive","settingsIcon","Stack","Tab","HomeStack","Navigator","screenOptions","headerShown","children","Screen","name","component","props","_objectSpread","navigation","App","_useState","_useState2","_slicedToArray","isLoggedIn","setLoggedIn","handleLogin","_ref","route","tabBarIcon","_ref2","focused","iconName","source","resizeMode","style","styles","footerIcon","tabBarShowLabel","tabBarStyle","position","padding","backgroundColor","borderTopStartRadius","borderTopEndRadius","onLogin","create","width"],"sources":["/home/fawad/Downloads/carRent (2)/carRent/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Image, StyleSheet } from \"react-native\";\nimport CheckoutScreen from \"./src/Checkout\";\n\nimport HomeScreen from \"./src/HomeScreen\";\nimport MapScreen from \"./src/MapScreen\";\nimport SettingsScreen from \"./src/SettingsScreen\";\nimport SavedScreen from \"./src/SavedScreen\";\nimport InfoScreen from \"./src/InfoScreen\";\nimport Seeddata from \"./src/seeddata\";\nimport Signup  from './src/signup'\nimport Login  from './src/login'\n\nconst homeIconActive = require(\"./src/assets/icons/home-active.png\");\nconst homeIcon = require(\"./src/assets/icons/home.png\");\nconst compassIconActive = require(\"./src/assets/icons/compass-active.png\");\nconst compassIcon = require(\"./src/assets/icons/compass.png\");\nconst savedIconActive = require(\"./src/assets/icons/saved-active.png\");\nconst savedIcon = require(\"./src/assets/icons/saved.png\");\nconst settingsIconActive = require(\"./src/assets/icons/settings-active.png\");\nconst settingsIcon = require(\"./src/assets/icons/settings.png\");\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction HomeStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen name=\"Initial\" component={HomeScreen} />\n      <Stack.Screen name=\"Info\">\n        {(props) => <InfoScreen {...props} navigation={props.navigation} />}\n      </Stack.Screen>\n\n      <Stack.Screen name=\"Checkout\" component={CheckoutScreen} />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  const [isLoggedIn, setLoggedIn] = useState(true); // Set to true for testing\n\n  // Function to update login state\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n\n  useEffect(() => {\n    Seeddata();\n    // Assuming Seeddata is a function that seeds data\n  }, []);\n\n  return (\n    <NavigationContainer>\n      {!isLoggedIn ? (\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            headerShown: false,\n            tabBarIcon: ({ focused }) => {\n              let iconName;\n\n              if (route.name === \"Home\") {\n                iconName = focused ? homeIconActive : homeIcon;\n              } else if (route.name === \"Map\") {\n                iconName = focused ? compassIconActive : compassIcon;\n              } else if (route.name === \"Saved\") {\n                iconName = focused ? savedIconActive : savedIcon;\n              } else if (route.name === \"Settings\") {\n                iconName = focused ? settingsIconActive : settingsIcon;\n              }\n\n              return (\n                <Image\n                  source={iconName}\n                  resizeMode=\"contain\"\n                  style={styles.footerIcon}\n                />\n              );\n            },\n            tabBarShowLabel: false,\n            tabBarStyle: {\n              position: \"absolute\",\n              padding: 10,\n              backgroundColor: \"black\",\n              borderTopStartRadius: 40,\n              borderTopEndRadius: 40,\n            },\n          })}\n        >\n          <Tab.Screen name=\"Home\" component={HomeStack} />\n          <Tab.Screen name=\"Map\" component={MapScreen} />\n          <Tab.Screen name=\"Saved\" component={SavedScreen} />\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n        </Tab.Navigator>\n      ) : (\n        <Stack.Navigator>\n          <Stack.Screen name=\"Login\">\n            {() => <Login onLogin={handleLogin} />}\n          </Stack.Screen>\n          <Stack.Screen name=\"Signup\" component={Signup} />\n          \n          <Stack.Screen name=\"Signup\" component={Signup} />\n        </Stack.Navigator>\n        // Render the HomeScreen directly\n        // <HomeStack />\n      )}\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  footerIcon: {\n    width: 25,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}